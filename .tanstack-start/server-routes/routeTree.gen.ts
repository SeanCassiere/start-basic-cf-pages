/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import type {
  FileRoutesByPath,
  CreateServerFileRoute,
} from '@tanstack/react-start/server'
import {
  createServerRoute,
  createServerFileRoute,
} from '@tanstack/react-start/server'

import { ServerRoute as ApiPostsRouteImport } from './../../src/routes/api.posts'

// Create/Update Routes

const rootRoute = createServerRoute()

const ApiPostsRoute = ApiPostsRouteImport.update({
  id: '/api/posts',
  path: '/api/posts',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-start/server' {
  interface FileRoutesByPath {
    '/api/posts': {
      id: '/api/posts'
      path: '/api/posts'
      fullPath: '/api/posts'
      preLoaderRoute: typeof ApiPostsRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './../../src/routes/api.posts' {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath['/api/posts']['parentRoute'],
    FileRoutesByPath['/api/posts']['id'],
    FileRoutesByPath['/api/posts']['path'],
    FileRoutesByPath['/api/posts']['fullPath'],
    unknown
  >
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/api/posts': typeof ApiPostsRoute
}

export interface FileRoutesByTo {
  '/api/posts': typeof ApiPostsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/api/posts': typeof ApiPostsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/api/posts'
  fileRoutesByTo: FileRoutesByTo
  to: '/api/posts'
  id: '__root__' | '/api/posts'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ApiPostsRoute: typeof ApiPostsRoute
}

const rootRouteChildren: RootRouteChildren = {
  ApiPostsRoute: ApiPostsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/api/posts"
      ]
    },
    "/api/posts": {
      "filePath": "api.posts.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
